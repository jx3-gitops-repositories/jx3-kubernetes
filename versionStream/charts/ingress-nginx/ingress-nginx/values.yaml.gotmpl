fullnameOverride: ingress-nginx

controller:
  admissionWebhooks:
{{- if .Values.jxRequirements.ingress.tls.enabled }}
    certManager:
      enabled: true
{{- else }}
    enabled: false
{{- end }}
  replicaCount: 3
  extraArgs:
    publish-service: nginx/ingress-nginx-controller
{{- if .Values.jxRequirements.ingress.tls.enabled }}
{{- if hasKey .Values.jxRequirements.ingress.tls "secretName" }}
    default-ssl-certificate: "jx/{{ .Values.jxRequirements.ingress.tls.secretName }}"
{{- else if .Values.jxRequirements.ingress.tls.production }}
    default-ssl-certificate: "jx/tls-{{ .Values.jxRequirements.ingress.domain | replace "." "-" }}-p"
{{- else }}
    default-ssl-certificate: "jx/tls-{{ .Values.jxRequirements.ingress.domain | replace "." "-" }}-s"
{{- end }}
{{- end }}
  service:
    enabled: true
  {{- if eq .Values.jxRequirements.cluster.provider "kind" }}
    type: NodePort
  {{- else if hasKey .Values.jxRequirements.ingress "serviceType" }}
    type: {{ .Values.jxRequirements.ingress.serviceType }}
  {{- end }}
  {{- if eq .Values.jxRequirements.cluster.provider "eks" }}
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: 'true'
      service.beta.kubernetes.io/aws-load-balancer-type: nlb
  {{- else if eq .Values.jxRequirements.cluster.provider "aks" }}
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-health-probe-request-path: /healthz
  {{- else }}
    annotations: {}
  {{- end }}
    labels: {}
  metrics:
    enabled: true
    port: 10254
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10254"
rbac:
  create: true
